#! /usr/bin/python3
'''
Plot a unicode histogram of a csv file.

Example - Get a histogram of near-miss subsound events
>>> cat $GUID/2017/10/$DAY/*worry* |
    jq '.data.level' |
    pulse-max --baseline 0.01 |
    awk '$1 > 0.8' |
    hist --bins 15 --round 3
'''
import pandas as pd
import numpy as np
import argparse
import sys


parser = argparse.ArgumentParser(
    description='Plot a cli histogram of a csv'
)
parser.add_argument('file', nargs='?')
parser.add_argument('--bins', type=int, default=10)
parser.add_argument('--round', type=int, default=2)
parser.add_argument('--no-scaling', action='store_true')
args = parser.parse_args()

if args.file:
    f = open(args.file, 'r')
elif not sys.stdin.isatty():
    f = sys.stdin
else:
    print('ERROR: unable to detect input', file=sys.stderr)
    sys.exit(42)

hist, bins = np.histogram(pd.read_csv(f, header=None).values, bins=args.bins)
scaling = 1 if args.no_scaling else min([h for h in hist if h])
hist = np.divide(hist, scaling)
bins = [str(round(b, args.round)) for b in bins]
padding = max(map(len, bins))

# print('■ = {}'.format(scaling))
# for h, b in zip(hist, bins):
#     print('{}: '.format(b.ljust(padding)), '■' * int(h))

print('# = {}'.format(scaling))
for h, b in zip(hist, bins):
    print('{}: '.format(b.ljust(padding)), '#' * int(h))
